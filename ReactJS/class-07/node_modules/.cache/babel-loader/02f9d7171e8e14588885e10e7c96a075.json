{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/Youtube/batch4/ReactJS/class-07/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'naveed',\n  email: 'learnwithnaveedsarwar@gmail.com',\n  rollNo: 234234,\n  className: 'web and mobile'\n}, {\n  name: 'Umar',\n  email: 'umar@gmail.com',\n  rollNo: 2342002334,\n  className: 'web and mobile'\n}, {\n  name: 'Ali',\n  email: 'Ali@gmail.com',\n  rollNo: 23,\n  className: 'web and mobile'\n}];\nexport default function App() {\n  _s();\n\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [rollNo, setRollNo] = useState('');\n  const [className, setClassName] = useState('');\n  const [students, setStudents] = useState(data);\n  const [isUpdate, setIsUpdate] = useState(false);\n\n  const onChangeNameHandler = e => {\n    console.log('event---', e.target.value);\n    setUserName(e.target.value);\n  };\n\n  const onSubmitHandler = () => {\n    console.log('submit button clicked');\n\n    if (!userName || !email || !rollNo || !className) {\n      alert('All inputs are required');\n      return;\n    } // do some logics with the form data\n\n\n    console.log('Values', userName, email, rollNo, className);\n    let student = {\n      name: userName,\n      email: email,\n      rollNo: rollNo,\n      className: className\n    };\n    setStudents([...students, student]);\n    setClassName('');\n    setUserName('');\n    setRollNo('');\n    setEmail('');\n  };\n\n  const onDeleteHandler = email => {\n    console.log('email', email);\n    let newStudents = students.filter(student => student.email !== email);\n    setStudents(newStudents);\n  };\n\n  const onUpdateHandler = item => {\n    setClassName(item.className);\n    setUserName(item.name);\n    setRollNo(item.rollNo);\n    setEmail(item.email);\n    setIsUpdate(true);\n  };\n\n  const onCtaUpdate = () => {\n    console.log('onCtaUpdate');\n    let student = {\n      name: userName,\n      email: email,\n      rollNo: rollNo,\n      className: className\n    };\n    let newStudents = students.map(item => {\n      if (item.email === email) {\n        return student;\n      } else {\n        return item;\n      }\n    });\n    setStudents(newStudents);\n    setClassName('');\n    setUserName('');\n    setRollNo('');\n    setEmail('');\n    setIsUpdate(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student SignUp Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setUserName(e.target.value),\n        value: userName,\n        placeholder: \"enter your name\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 18\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setEmail(e.target.value),\n        value: email,\n        placeholder: \"enter your Email\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Roll No.: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setRollNo(e.target.value),\n        value: rollNo,\n        placeholder: \"enter your Roll No.\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 22\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Class: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setClassName(e.target.value),\n        value: className,\n        placeholder: \"enter your Class\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), isUpdate ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onCtaUpdate,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSubmitHandler,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"customTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Roll No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), students.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"customTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.rollNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.className\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onDeleteHandler(item.email),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onUpdateHandler(item),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9j9xitwAkoL5fthskNb6ZJGzHDI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macbook/Documents/Youtube/batch4/ReactJS/class-07/src/App.js"],"names":["React","useState","data","name","email","rollNo","className","App","userName","setUserName","setEmail","setRollNo","setClassName","students","setStudents","isUpdate","setIsUpdate","onChangeNameHandler","e","console","log","target","value","onSubmitHandler","alert","student","onDeleteHandler","newStudents","filter","onUpdateHandler","item","onCtaUpdate","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\nconst data = [\n\n  {\n    name: 'naveed',\n    email: 'learnwithnaveedsarwar@gmail.com',\n    rollNo: 234234,\n    className: 'web and mobile'\n  },\n\n\n  {\n    name: 'Umar',\n    email: 'umar@gmail.com',\n    rollNo: 2342002334,\n    className: 'web and mobile'\n  },\n\n\n  {\n    name: 'Ali',\n    email: 'Ali@gmail.com',\n    rollNo: 23,\n    className: 'web and mobile'\n  },\n\n\n\n\n]\n\nexport default function App() {\n\n  const [userName, setUserName] = useState('')\n  const [email, setEmail] = useState('')\n  const [rollNo, setRollNo] = useState('')\n  const [className, setClassName] = useState('')\n\n  const [students, setStudents] = useState(data)\n\n\n  const [isUpdate, setIsUpdate] = useState(false)\n\n\n\n  const onChangeNameHandler = (e) => {\n    console.log('event---', e.target.value);\n    setUserName(e.target.value)\n  }\n\n  const onSubmitHandler = () => {\n    console.log('submit button clicked');\n    if (!userName || !email || !rollNo || !className) {\n      alert('All inputs are required')\n      return\n    }\n\n    // do some logics with the form data\n    console.log('Values', userName, email, rollNo, className)\n\n    let student = {\n      name: userName,\n      email: email,\n      rollNo: rollNo,\n      className: className\n    }\n\n    setStudents([...students, student])\n\n    setClassName('')\n    setUserName('')\n    setRollNo('')\n    setEmail('')\n  }\n\n  const onDeleteHandler = (email) => {\n\n    console.log('email', email);\n\n    let newStudents = students.filter((student) => student.email !== email)\n\n    setStudents(newStudents)\n\n  }\n\n  const onUpdateHandler = (item) => {\n    setClassName(item.className)\n    setUserName(item.name)\n    setRollNo(item.rollNo)\n    setEmail(item.email)\n    setIsUpdate(true)\n  }\n\n\n  const onCtaUpdate = () => {\n    console.log('onCtaUpdate');\n\n    let student = {\n      name: userName,\n      email: email,\n      rollNo: rollNo,\n      className: className\n    }\n\n\n    let newStudents = students.map((item) => {\n      if (item.email === email) {\n        return student\n      }\n      else {\n        return item\n      }\n    })\n\n    setStudents(newStudents)\n\n    setClassName('')\n    setUserName('')\n    setRollNo('')\n    setEmail('')\n    setIsUpdate(false)\n\n\n\n  }\n\n\n  return (\n    <div>\n      <h1>Student SignUp Form</h1>\n      <div>Name: <input onChange={(e) => setUserName(e.target.value)} value={userName} placeholder='enter your name' type='text' /> </div>\n      <div>Email: <input onChange={(e) => setEmail(e.target.value)} value={email} placeholder='enter your Email' type='text' /> </div>\n      <div>Roll No.: <input onChange={(e) => setRollNo(e.target.value)} value={rollNo} placeholder='enter your Roll No.' type='text' /> </div>\n      <div>Class: <input onChange={(e) => setClassName(e.target.value)} value={className} placeholder='enter your Class' type='text' /> </div>\n      {isUpdate ?\n        <button onClick={onCtaUpdate}>Update</button> :\n        <button onClick={onSubmitHandler}>Submit</button>\n      }\n\n\n      <h1>List of Students</h1>\n\n      <table >\n        <tr className='customTable'>\n          <th>No.</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Roll No.</th>\n          <th>Class</th>\n          <th>Actions</th>\n        </tr>\n\n        {\n          students.map((item, index) => {\n            return (\n              <tr key={index} className='customTable'>\n                <td>{index + 1}</td>\n                <td>{item.name}</td>\n                <td>{item.email}</td>\n                <td>{item.rollNo}</td>\n                <td>{item.className}</td>\n                <td>\n                  <button onClick={() => onDeleteHandler(item.email)}>Delete</button>\n                  <button onClick={() => onUpdateHandler(item)}>Update</button>\n                </td>\n              </tr>\n            )\n          })\n        }\n\n\n      </table>\n\n\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}